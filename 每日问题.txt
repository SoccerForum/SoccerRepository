2019/2/20
1.TestDao.xml中的14行查询没有加入league的信息
2.继承GenericDao接口的时候，在Member.java中加了implements Serializable
问题：
1.mybatis-generator自动生成的.xml文件中并没有采用表连接的查询方式，而且看上去有些复杂，是采用然后在加上一些方法，
还是全部都由自己来写实用一些呢
2019/2/21
问题：
1.找不到.xml的位置，不在同一个文件下，可以通过classpath*:或/加文件路径
文件路径前不加/默认在同一个文件夹下，加上/表示在根目录下的文件
2.org.springframework.test.context.transaction.
添加jdbc和tx依赖
3.org.springframework.jdbc.CannotGetJdbcConnectionException：failed to obtain jdbc connection
在pom.xml中加入5.x版本的MySQL connector依赖
2019/2/22
1.mybatis两次查询时，发现findbyid可以正常获取数据库信息，而findbyName返回值却为空，如果是两种查询方式都为空的话，最有可能是字段类型不匹配，但是findbyid可以正常显示，说明是name的值没有传到xml文件，这时候去查看dbconfig.properties文件，会发现在url缺少了useUnicode=true&characterEncoding=utf-8，就会导致汉字不能正常的传递。
2.使用表连接查询的时候，在字段对应的时候，如果名字一致，可以在resultMap和association或collection中加入autoMapping = "true",如果两个表中都有id，name属性，要通过别名的方法进行区分，然后在id column = "tid" property = "id" result column = "tname" property = "name" 如果不加automaping，就不能获取到对应的值，显示为空，如果同名的属性不加以区分，会默认获取第一个属性的值。
2019/2/25
1.Could not resolve resource location pattern [mybatis/mapper/*.xml]: ServletContext resource [/mybatis/mapper/] cannot be resolved to URL because it does not exist
在页面跳转的时候出现404的错误，eclipse给出的错误信息如上，意思是解析不了mybatis/mapper.xml文件，造成的原因是，我的路径写的是mybatis/mapper/*.xml,但是mybatis并不是在根目录下，所以在配置文件中<property name="mapperLocations" value="mybatis/mapper/*.xml" />这一行需要给成value=”classpath*:mybatis/mapper/*.xml表示扫描当前文件夹下所有的mybatis文件夹中xml文件“，就成功的解决了路径的问题。（困扰了自己三天的问题,应该好好反思）
学到的纠错方法：首先明白运行的顺序，先从web.xml拦截请求，然后在到config.xml扫描文件，进行视图解析，然后在跳转到指定的页面，先去查看controller中的方法能否得到应有的结果，如果没有问题，就去查看配置文件中的路径，挨个调试，知道解决问题。


2.还未解决的问题：login页面中的汉字不能传到数据库中
3.需要在demo页面显示post的title属性，然后还需要在content页面显示post的所有信息，不知道怎么定义方法
2019/2/26
1.在navicat中可以成功查询所有数据，然而在eclipse中却只能显示部分
原因：多表联查会造成查询结果不按id顺序显示
改正：只查询post的title信息就不用多表联查的方法，单个表查询就可得到正确的结果
2.将得到的title显示到前端页面中，需要用数组进行传递，model.attribute只能传递实体类到前端，不知道怎么传递数组
解决办法：a.利用json数组的形式封装，然后在前端用js/ajax解析json数组
b.利用list，将数据add到list中，然后用model.attribute传到前端，然后用foreach的方法，进行迭代输出
注意：foreach需要导入jstl,standard的jar包，前面还要加入<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>